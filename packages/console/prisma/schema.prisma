generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["selectRelationCount", "orderByAggregateGroup"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CasbinRule {
  id        Int      @id @default(autoincrement())
  ptype     String
  v0        String?
  v1        String?
  v2        String?
  v3        String?
  v4        String?
  v5        String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("casbin_rule")
}

model User {
  id             String         @id @default(cuid())
  email          String         @unique
  displayName    String
  phoneNumber    String?
  dateOfBirth    DateTime?
  gender         Gender         @default(UNSPECIFIED)
  emailVerified  Boolean        @default(false)
  disabled       Boolean        @default(false)
  role           Role           @default(ANONYMOUS)
  state          State          @default(PENDING)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  avatorId       String?
  locationId     String?
  organizationId String?
  avator         Attachment?    @relation(fields: [avatorId], references: [id])
  location       Location?      @relation(fields: [locationId], references: [id])
  orders         Order[]
  organizations  Organization[] @relation("ownedBy")
  ratings        Rating[]       @relation("ratingsBy")
  rated        Rating[]       @relation("ratedBy")
  staffOf        Organization[] @relation("staffOf")
  provides       Order[]        @relation("providedBy")
  invites        Invite[]   @relation("invitesBy")
  invited        Invite[]   @relation("invitedBy")
  device         Device? 
  transactions   Transaction[]
}
model Device {
  id          String  @id   @default(cuid())
  fcm_id      String
  device_id   String  @unique
  type        String @default("ANDROID")
  user        User @relation(fields: [userId],references:[id])
  userId      String
}

model Attachment {
  id              String           @id @default(cuid())
  path            String
  filename        String?
  mimetype        String?
  encoding        String?
  duration        Int              @default(0)
  size            Int              @default(0)
  attachmentType  AttachmentType   @default(IMAGE)
  downloadable    Boolean          @default(false)
  placement       String           @default("default")
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  orders          Order[]
  organizations   Organization[]
  services        Service[]
  serviceCategory ServiceCategory?
  users           User[]
  paymentMethods  PaymentMethod?
}

model Organization {
  id          String            @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  logoId      String
  locationId  String
  ownerId     String
  state       State             @default(PENDING)
  location    Location          @relation(fields: [locationId], references: [id])
  logo        Attachment        @relation(fields: [logoId], references: [id])
  owner       User              @relation("ownedBy", fields: [ownerId], references: [id])
  orders      Order[]
  ratings     Rating[]
  services    Service[]
  offers      ServiceCategory[]
  staffs      User[]            @relation("staffOf")
  invites     Invite[]          
}

model Service {
  id                String          @id @default(cuid())
  name              String
  description       String?
  price             Float
  state             State           @default(PENDING)
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  organizationId    String
  imageId           String
  serviceCategoryId String
  image             Attachment      @relation(fields: [imageId], references: [id])
  organization      Organization    @relation(fields: [organizationId], references: [id])
  category          ServiceCategory @relation(fields: [serviceCategoryId], references: [id])
  orders            Order[]
}

model Order {
  id             String       @id @default(cuid())
  quantity       Int
  state          State        @default(PENDING)
  deliveryMode   DeliveryMode[] 
  notes          String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  serviceId      String
  organizationId String
  ownerId        String
  providerId     String?
  receiptId      String?
  locationId     String?
  organization   Organization @relation(fields: [organizationId], references: [id])
  owner          User         @relation(fields: [ownerId], references: [id])
  receipt        Attachment?  @relation(fields: [receiptId], references: [id])
  service        Service      @relation(fields: [serviceId], references: [id])
  provider       User?   @relation("providedBy",fields: [providerId],references:[id])
  location       Location?    @relation("deliveryAt",fields: [locationId],references:[id])
  mpesa_payment  MpesaPayment?
  selcom_payment SelcomPayment?

}

model ServiceCategory {
  id            String         @id @default(cuid())
  name          String
  state         State          @default(PENDING)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  imageId       String         @unique
  image         Attachment     @relation(fields: [imageId], references: [id])
  services      Service[]
  organizations Organization[]
}

model Rating {
  id             String       @id @default(cuid())
  value          Int
  comment        String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  ownerId        String
  organizationId String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  owner          User         @relation("ratedBy",fields: [ownerId], references: [id])
  user           User?         @relation("ratingsBy",fields: [userId],references:[id])
  userId         String?      
}

model Location {
  id            String                    @id @default(cuid())
  name          String                    @default("unknown")
  geom          Unsupported("geography")?
  lat           Float
  lon           Float
  state         State                     @default(PENDING)
  createdAt     DateTime                  @default(now())
  updatedAt     DateTime                  @updatedAt
  organizations Organization[]
  users         User[]
  order         Order? @relation("deliveryAt")
}
model Invite{
   id            String                    @id @default(cuid())
   inviter       User                      @relation("invitesBy",fields: [inviterId],references:[id])
   inviterId     String
   invitee       User                      @relation("invitedBy",fields: [inviteeId],references:[id])
   inviteeId     String
   message       String                    @db.VarChar(256)
   url           String?                    @db.VarChar(256)
   organization  Organization?              @relation(fields:[organizationId],references:[id])
   organizationId String?
   type          InviteType                @default(INSTALL)
   state         State                     @default(PENDING)
   createdAt     DateTime                  @default(now())
   updatedAt     DateTime                  @updatedAt
}
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
  @@ignore
}

model PaymentMethod{
  id    String @id @default(cuid())
  name  String
  description String?
  logo Attachment @relation(fields:[attachmentId],references:[id])
  attachmentId String
  state                           State   @default(PENDING)
  createdAt     DateTime                  @default(now())
  updatedAt     DateTime                  @updatedAt
}

model Transaction {
    id          String @id  @default(cuid())
    paymentMethode String 
    type          TransactionType
    initiator     User @relation(fields:[userId],references:[id])
    userId        String
    mpesaPayment MpesaPayment? @relation(fields:[mpesaPaymentId],references:[id])
    mpesaPaymentId String?
    selcomPayment SelcomPayment? @relation(fields:[selcomPaymentId],references:[id])
    selcomPaymentId String?
    selcomDisbursement SelcomDisbursement? @relation(fields:[selcomDisbursementId],references:[id])
    selcomDisbursementId String?
     state                           State   @default(PENDING)
  createdAt     DateTime                  @default(now())
  updatedAt     DateTime                  @updatedAt
}
model MpesaPayment {
  id                              String @id  @default(cuid())
  input_Amount                    String
  input_Country                   String  @default("TZN")
  input_Currency                  String  @default("TZS")
  input_CustomerMSISDN            String
  input_ServiceProviderCode       String
  input_ThirdPartyConversationID  String
  input_TransactionReference      String
  input_PurchasedItemsDesc        String
  output_ConversationID           String?
  output_ResponseCode             String?
  output_ResponseDesc             String?
  output_ThirdPartyConversationID String?
  output_TransactionID            String?
  order                           Order @relation(fields: [input_ThirdPartyConversationID],references:[id])
  transaction Transaction?
  state                           State   @default(PENDING)
  createdAt     DateTime                  @default(now())
  updatedAt     DateTime                  @updatedAt
}


model SelcomDisbursement {
  id String @id @default(cuid())
  amount      Int
  reference   String?
  resultCode  String?
  status      SelcomPaymentStatus      @default(PENDING)
  transId     String                           
  userId      Int
  utilitycode SelcomUtilityCode
  utilityref  String
  validation  SelcomPaymentStatus  @default(PENDING)
  transaction Transaction?
  state      State                 @default(PENDING)
  createdAt     DateTime                  @default(now())
  updatedAt     DateTime                  @updatedAt
}

model SelcomPayment {
  id         String @id @default(cuid())
  transId    String                     
  amount     Int
  msisdn     String
  operator   String?
  reference  String?
  resultCode String?
  status     SelcomPaymentStatus     @default(PENDING)
  utilityref Int
  validation SelcomPaymentStatus @default(PENDING)
  order                           Order @relation(fields: [orderId],references:[id])
  orderId       String
  transaction Transaction?
  state         State             @default(PENDING)
  createdAt     DateTime                  @default(now())
  updatedAt     DateTime                  @updatedAt
}

enum Role {
  ANONYMOUS
  CONSUMER
  PROVIDER
  MANAGER
  SUPERUSER
}

enum State {
  PENDING
  REVIEW
  REJECTED
  APPROVED
  COMPLETED
  ARCHIVED
  DELETED
}

enum Gender {
  MALE
  FEMALE
  UNSPECIFIED
}

enum AttachmentType {
  AUDIO
  VIDEO
  DOCUMENT
  IMAGE
}

enum DeliveryMode {
  PICKUP
  SHIPPING
  VIRTUAL
}

enum InviteType {
  INSTALL
  ORGANIZATION
}

enum TransactionType {
  PAYMENT 
  DISBURSEMENT
}

enum SelcomUtilityCode {
  VMCASHIN
  AMCASHIN
  TPCASHIN
  EZCASHIN
  SPCASHIN
  HPCASHIN
  TTCASHIN
}


enum SelcomPaymentStatus {
  PENDING
  SUCCESS
  FAILED
}