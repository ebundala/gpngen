

input AuthInput {
	email: String
	password: String
	displayName: String
	phoneNumber: String
	mode:   AuthMode
}
enum AuthMode{
	EMAIL
	PHONE
	OAUTH
}

type AuthResult {
	token: String
	error: Boolean!
	message: String!
	user: User 
}
type SignOutResult {
	status: Boolean
	message: String

}

extend type Mutation {
	signup(credentials: AuthInput!,organization:OrganizationCreateWithoutOwnerInput): AuthResult!
	signin(credentials: AuthInput!): AuthResult!
	recoverAccount(email: String!): AuthResult!
	signout: SignOutResult!	
}