version: "3.1"

services:
  db:
    image: ${POSTGRES_TAG}
    
    volumes:
      - PGDATA:/var/lib/postgresql/data
    networks:
      webnet:
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 1g
      restart_policy:
        condition: on-failure
  
  app:
    image: ${NODE_TAG}
    working_dir: /home/app/console
    environment:
     # google credentials
       GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
       FIREBASE_API_KEY: ${FIREBASE_API_KEY}
       STORAGE_BUCKET: ${STORAGE_BUCKET}
       FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      #sendgrid email
       SENDGRID_API_KEY: ${SENDGRID_API_KEY}
       SENDGRID_SENDER_EMAIL: ${SENDGRID_SENDER_EMAIL}
       SENDGRID_ACCOUNT_ACTIVATION_TEMPLATE: ${SENDGRID_ACCOUNT_ACTIVATION_TEMPLATE}
       SENDGRID_ACCOUNT_DEACTIVATION_TEMPLATE: ${SENDGRID_ACCOUNT_DEACTIVATION_TEMPLATE}
       SENDGRID_WELCOME_TEMPLATE: ${SENDGRID_WELCOME_TEMPLATE}
    command: yarn run start:docker:prod
    depends_on:
      - db
    
      
    volumes:
      - ./:/home/app
    networks:
      webnet:

    deploy:
      replicas: 1
      # resources:
      #   limits:
      #     cpus: "1"
      #     memory: 1g
      restart_policy:
        condition: on-failure
  
  webserver:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./webserver/web-root:/var/www/html
      - ./webserver/nginx-conf:/etc/nginx/conf.d
      - ./webserver/certbot/certbot-etc:/etc/letsencrypt
      - ./webserver/certbot/certbot-var:/var/lib/letsencrypt
      - ./dhparam:/etc/ssl/certs
    networks:
      webnet:
    deploy:
      replicas: 1
      # resources:
      #  limits:
      #    cpus: "1"
      #    memory: 1g
      restart_policy:
        condition: on-failure
        
networks:
  webnet:
volumes:
  PGDATA:

