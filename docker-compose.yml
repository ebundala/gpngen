version: "3.1"

services:
  db:
    image: ${POSTGRES_TAG}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - PGDATA:/var/lib/postgresql/data
    networks:
      webnet:
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 1g
      restart_policy:
        condition: on-failure
  pgbouncer:
    image: "bitnami/pgbouncer:latest"
    environment:
      POSTGRESQL_USERNAME: ${POSTGRES_USER} #Backend PostgreSQL username. Default: postgres.
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD} #Backend PostgreSQL password. No defaults.
      POSTGRESQL_DATABASE: ${POSTGRES_DB} #Backend PostgreSQL Database name to connect to. Default: postgres.
      POSTGRESQL_HOST: db #Backend PostgreSQL hostname. Default: postgresql.
      POSTGRESQL_PORT: ${POSTGRES_PORT} #Backend PostgreSQL port. Default: 5432.
    #  PGBOUNCER_EXTRA_ARGS: "--verbose"
    depends_on:
      - db
    networks:
      webnet:
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 1g
      restart_policy:
        condition: on-failure
    ports:
      - 6432:6432
    volumes:
      - ./pgbouncer/:/bitnami/pgbouncer/
  # adminer:
  #   image: ${ADMINER_TAG}
  #   # environment:
  #   #  ADMINER_PLUGINS: "tables-filter tinymce"
  #   # ADMINER_DEFAULT_SERVER: "pgbouncer:6432"
  #   ports:
  #     - ${ADMINER_PORT}:8080
  #   networks:
  #     webnet:
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         cpus: "1"
  #         memory: 1g
  #     restart_policy:
  #       condition: on-failure
  app:
    image: ${NODE_TAG}
    working_dir: /home/app/packages/console
    command: yarn run start:docker:debug
    depends_on:
      - db
    ports:
      - ${APP_PORT}:3000
      - 9228:9229 #debugger port disable in production
      - 5555:5555 #prisma studio disable in production
    volumes:
      - ./:/home/app
    networks:
      webnet:

    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 1g
      restart_policy:
        condition: on-failure
networks:
  webnet:
volumes:
  PGDATA:
